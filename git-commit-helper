#!/usr/bin/env bash

set -e

println() {
	gum format --type="markdown" <<-EOF
		${@}
	EOF
	printf "\n"
} # println()

main() {
	local -a commit_types
	local commit_type
	local commit_scope
	local commit_subject
	local commit_body
	local commit_created=false

	# true if no staged changes, false if changes are staged
	set +e
	if ! git diff --cached --quiet; then
		println "# Found the following staged changes:"
		git status
		printf "\n"
	else
		message="$(
			cat <<-EOF
				# ERROR: Can't find staged changes

				You can stage changes with one or more of these commands:
				\`\`\`text
				git add --patch
				git add -u .
				git add file(s)
				\`\`\`
			EOF
		)"
		println "${message}"
		exit 1
	fi
	set -e

	println "# Please choose the commit type:"
	commit_types=("fix" "feat" "docs" "style" "refactor" "test" "chore")
	commit_type="$(gum choose "${commit_types[@]}")"
	printf "\n"

	println "# Please enter the commit scope (optional):"
	commit_scope="$(gum input --placeholder "scope")"
	if [[ -n ${commit_scope} ]]; then
		commit_scope="(${commit_scope})"
	fi
	printf "\n"

	println "# Please enter the commit message's subject line:"
	commit_subject="$(gum input --placeholder "summary of this change")"
	tmpfile_subject="$(mktemp)"
	echo "${commit_subject}" >"${tmpfile_subject}"
	println "# Checking spelling of commit message subject"
	aspell --master=en_US --lang=en_US --check "${tmpfile_subject}"
	commit_subject="$(cat "${tmpfile_subject}")"
	rm -f "${tmpfile_subject}"
	printf "\n"

	println "# Please enter the commit message's body (multiline):"
	commit_body="$(gum write --placeholder "details of this change")"
	tmpfile_body="$(mktemp)"
	echo "${commit_body}" >"${tmpfile_body}"
	println "# Checking spelling of commit message body"
	aspell --master=en_US --lang=en_US --check "${tmpfile_body}"
	commit_body="$(cat "${tmpfile_body}")"
	rm -f "${tmpfile_body}"
	printf "\n"

	printf "commit_type: %s\n" "${commit_type}"
	printf "commit_scope: %s\n" "${commit_scope}"
	printf "commit_subject: %s\n" "${commit_subject}"
	printf "commit_body: %s\n" "${commit_body}"
	printf "\n"

	gum format --type="markdown" <<-EOF
		# Staged changes:
		$(git status)
	EOF
	gum format --type="markdown" <<-EOF
		# Staged command:
		\`git commit -m "${commit_type}${commit_scope}: ${commit_subject}"\" -m \""${commit_body}"\`
	EOF
	if gum confirm "Commit changes?"; then
		git commit -m "${commit_type}${commit_scope}: ${commit_subject}" -m "${commit_body}"
		commit_created=true
	fi

	println "# Running gitlint on unpushed commits or task branch..."
	if gitlint lint; then
		println "## done."
	else
		println "## failed."
	fi

	if ${commit_created}; then
		println "# Showing git commit summary"
		git show --summary
	fi
} # main ()

main "${@}"
